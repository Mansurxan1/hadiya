// –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ –≤—Å–µ—Ö —ç—Ç–∞–ø–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import fetch from 'node-fetch';

// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// ID –∑–∞–∫–∞–∑–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const ORDER_ID = '1741966660219';

async function simulatePayment() {
  try {
    console.log('=== –≠–¢–ê–ü 1: –°–ò–ú–£–õ–Ø–¶–ò–Ø –û–ü–õ–ê–¢–´ ===');
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
    const orderFilePath = path.join(__dirname, 'data', 'orders', `${ORDER_ID}.json`);
    
    if (!fs.existsSync(orderFilePath)) {
      console.error(`–§–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–∫–∞–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${orderFilePath}`);
      return;
    }
    
    const orderData = JSON.parse(fs.readFileSync(orderFilePath, 'utf8'));
    console.log('–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞:', orderData);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –∫–∞–∫ –±—É–¥—Ç–æ –æ–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
    const updatedOrderData = {
      ...orderData,
      clickTransId: '987654321', // ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ Click
      status: 'PAID', // –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã
      paidAt: new Date().toISOString() // –í—Ä–µ–º—è –æ–ø–ª–∞—Ç—ã
    };
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
    fs.writeFileSync(orderFilePath, JSON.stringify(updatedOrderData, null, 2));
    console.log('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:', updatedOrderData);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–ª–∞—Ç–µ–∂–µ
    console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ...');
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = `
üí∞ –ü–ª–∞—Ç–µ–∂ –ø–æ–ª—É—á–µ–Ω #${updatedOrderData.orderId}
üèôÔ∏è –¢—É—Ä: ${updatedOrderData.tourName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'} (ID: ${updatedOrderData.tourId || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'})
üíµ –°—É–º–º–∞: ${updatedOrderData.price || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'} —Å—É–º
üë§ –ö–ª–∏–µ–Ω—Ç: ${updatedOrderData.userName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${updatedOrderData.userPhone || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üÜî ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ Click: ${updatedOrderData.clickTransId || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
‚úÖ –°—Ç–∞—Ç—É—Å: ${updatedOrderData.status}
‚è±Ô∏è –î–∞—Ç–∞ –æ–ø–ª–∞—Ç—ã: ${new Date(updatedOrderData.paidAt || '').toLocaleString('ru-RU')}
    `;
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
    const botToken = process.env.TELEGRAM_BOT_TOKEN || '8154199213:AAGf7rETgpEp27XQMwvfb1Ef7jslvkTthFY';
    const chatId = process.env.TELEGRAM_CHAT_ID || '5283151626';
    
    const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: message,
        parse_mode: 'HTML'
      }),
    });
    
    const result = await response.json();
    
    if (result.ok) {
      console.log('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–ª–∞—Ç–µ–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
    } else {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', result);
    }
    
    return updatedOrderData;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–º—É–ª—è—Ü–∏–∏ –æ–ø–ª–∞—Ç—ã:', error);
    throw error;
  }
}

// –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
try {
  const updatedOrderData = await simulatePayment();
  console.log('–°–∏–º—É–ª—è—Ü–∏—è –æ–ø–ª–∞—Ç—ã –∑–∞–∫–∞–∑–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
} catch (error) {
  console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞:', error);
} 