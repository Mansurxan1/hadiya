/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ Click API
 * 
 * –ó–∞–ø—É—Å–∫: ts-node tests/create-test-payment.ts
 */

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
import dotenv from 'dotenv';
dotenv.config();

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π –∏–º–ø–æ—Ä—Ç –≤–º–µ—Å—Ç–æ –º–æ–¥—É–ª—è
import crypto from 'crypto';

// –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –±–µ–∑ –∏–º–ø–æ—Ä—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞ Click
async function createTestPayment() {
  console.log('=== üí∞ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ Click ===\n');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const serviceId = process.env.CLICK_SERVICE_ID;
    const merchantId = process.env.CLICK_MERCHANT_ID;
    const secretKey = process.env.CLICK_SECRET_KEY;
    
    if (!serviceId || !merchantId || !secretKey) {
      throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Click API');
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π ID –∑–∞–∫–∞–∑–∞
    const orderId = `test-${Date.now()}`;
    const amount = 1000; // 1000 —Å—É–º
    const returnUrl = 'https://hadiya.uz/payment/success';
    
    console.log(`üîë ID –∑–∞–∫–∞–∑–∞: ${orderId}`);
    
    // –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å—å –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    const signTime = Date.now();
    const signString = `${serviceId}${orderId}${signTime}${secretKey}`;
    const sign = crypto.createHash('md5').update(signString).digest('hex');
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É Click
    const clickUrl = `https://my.click.uz/services/pay?service_id=${serviceId}&merchant_id=${merchantId}&amount=${amount}&transaction_param=${orderId}&return_url=${encodeURIComponent(returnUrl)}&sign_time=${signTime}&sign_string=${sign}`;
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç
    const result = {
      payment_url: clickUrl,
      payment: {
        id: `test_${Date.now()}`,
        amount: amount,
        status: 'WAITING',
        created_time: new Date().toISOString()
      }
    };
    
    console.log('\n‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω:');
    console.log(JSON.stringify(result, null, 2));
    
    console.log('\nüåê –°—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã:');
    console.log(result.payment_url);
    
    console.log('\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö:');
    console.log(`ID –∑–∞–∫–∞–∑–∞: ${orderId}`);
    console.log(`ID –ø–ª–∞—Ç–µ–∂–∞ Click: ${result.payment.id}`);
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞:');
    console.error(error);
  }
}

createTestPayment(); 