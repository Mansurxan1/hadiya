import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import fetch from 'node-fetch';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const ORDER_ID = '1741966660219';

async function simulateFiscalization() {
  try {
    console.log('=== –≠–¢–ê–ü 2: –°–ò–ú–£–õ–Ø–¶–ò–Ø –§–ò–°–ö–ê–õ–ò–ó–ê–¶–ò–ò ===');
    
    const orderFilePath = path.join(__dirname, 'data', 'orders', `${ORDER_ID}.json`);
    
    if (!fs.existsSync(orderFilePath)) {
      console.error(`–§–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–∫–∞–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${orderFilePath}`);
      return;
    }
    
    const orderData = JSON.parse(fs.readFileSync(orderFilePath, 'utf8'));
    console.log('–î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –¥–ª—è —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏:', orderData);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–∫–∞–∑ –≤ —Å—Ç–∞—Ç—É—Å–µ PAID
    if (orderData.status !== 'PAID') {
      console.error('–ó–∞–∫–∞–∑ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Å—Ç–∞—Ç—É—Å–µ PAID –¥–ª—è —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏');
      return;
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏
    const fiscalData = {
      paymentId: orderData.orderId,
      qrCodeURL: 'https://api.click.uz/ofd/qr/XYZ987DEF654',
      items: [
        {
          name: orderData.tourName,
          price: parseInt(orderData.price),
          quantity: 1
        }
      ],
      receivedCard: parseInt(orderData.price)
    };
    
    console.log('–î–∞–Ω–Ω—ã–µ —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏:', fiscalData);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏
    console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏...');
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–∞—Ö
    let itemsInfo = '';
    if (fiscalData.items && fiscalData.items.length > 0) {
      itemsInfo = '\nüìã –¢–æ–≤–∞—Ä—ã/—É—Å–ª—É–≥–∏:\n';
      fiscalData.items.forEach(item => {
        itemsInfo += `- ${item.name}: ${item.price} —Å—É–º x ${item.quantity} = ${item.price * item.quantity} —Å—É–º\n`;
      });
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = `
üßæ –§–∏—Å–∫–∞–ª—å–Ω—ã–π —á–µ–∫ –¥–ª—è –∑–∞–∫–∞–∑–∞ #${orderData.orderId}
üèôÔ∏è –¢—É—Ä: ${orderData.tourName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'} (ID: ${orderData.tourId || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'})
üíµ –°—É–º–º–∞: ${orderData.price || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'} —Å—É–º
üë§ –ö–ª–∏–µ–Ω—Ç: ${orderData.userName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${orderData.userPhone || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üÜî ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ Click: ${orderData.clickTransId || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}${itemsInfo}
üîó QR-–∫–æ–¥ —á–µ–∫–∞: ${fiscalData.qrCodeURL}
‚è±Ô∏è –î–∞—Ç–∞ —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏: ${new Date().toLocaleString('ru-RU')}
    `;
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
    const botToken = process.env.TELEGRAM_BOT_TOKEN || '8154199213:AAGf7rETgpEp27XQMwvfb1Ef7jslvkTthFY';
    const chatId = process.env.TELEGRAM_CHAT_ID || '5283151626';
    
    const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: message,
        parse_mode: 'HTML'
      }),
    });
    
    const result = await response.json();
    
    if (result.ok) {
      console.log('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –ø–æ—Å–ª–µ —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏
      const updatedOrderData = {
        ...orderData,
        status: 'FISCALIZED', // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏
        fiscalizedAt: new Date().toISOString(), // –í—Ä–µ–º—è —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏
        fiscalQRCode: fiscalData.qrCodeURL // –°—Å—ã–ª–∫–∞ –Ω–∞ QR-–∫–æ–¥ —á–µ–∫–∞
      };
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
      fs.writeFileSync(orderFilePath, JSON.stringify(updatedOrderData, null, 2));
      console.log('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏:', updatedOrderData);
      
      return { orderData: updatedOrderData, fiscalData };
    } else {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏:', result);
      return null;
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–º—É–ª—è—Ü–∏–∏ —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
    throw error;
  }
}

// –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
try {
  const result = await simulateFiscalization();
  if (result) {
    console.log('–°–∏–º—É–ª—è—Ü–∏—è —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞–∫–∞–∑–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  }
} catch (error) {
  console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞ —Ñ–∏—Å–∫–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
} 